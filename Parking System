module Parking(
input [14:0] cars,  
output reg[6:0] segment,
output reg [6:0] segment2);
reg[3:0] temp ;

always@(cars)
	temp=cars[14]+cars[13]+cars[12]+cars[11]+cars[10]+cars[9]+cars[8]+cars[7]+cars[6]+cars[5]+cars[4]+cars[3]+cars[2]+cars[1]+cars[0]; 
always@(temp)
	begin
		case(temp[3:0])
			4'h0: segment=7'b0000001;  //"0"
			4'h1: segment=7'b1001111;  //"1"
			4'h2: segment=7'b0010010;  //"2"
			4'h3: segment=7'b0000110;  //"3"
			4'h4: segment=7'b1101100;  //"4"
			4'h5: segment=7'b0100100;  //"5"                //1st Segment
			4'h6: segment=7'b0100000;  //"6" 
			4'h7: segment=7'b0001111;  //"7" 
			4'h8: segment=7'b0000000;  //"8"  
			4'h9: segment=7'b0001100;  //"9" 
			4'hA: segment=7'b0000001;  //"0"
			4'hB: segment=7'b1001111;  //"1"
			4'hC: segment=7'b0010010;  //"2"
			4'hD: segment=7'b0000110;  //"3"
			4'hE: segment=7'b1101100;  //"4"
			4'hF: segment=7'b0100100;  //"5"
		endcase
	end
always@(temp)
	begin
		case(temp[3:0])
			4'h0: segment2=7'b0000001;  //"0"
			4'h1: segment2=7'b0000001;  //"0"
			4'h2: segment2=7'b0000001;  //"0"
			4'h3: segment2=7'b0000001;  //"0"
			4'h4: segment2=7'b0000001;  //"0"
			4'h5: segment2=7'b0000001;  //"0" 
			4'h6: segment2=7'b0000001;  //"0" 
			4'h7: segment2=7'b0000001;  //"0" 
			4'h8: segment2=7'b0000001;  //"0"  
			4'h9: segment2=7'b0000001;  //"0" 
			4'hA: segment2=7'b1001111;  //"1"            //2nd Segment
			4'hB: segment2=7'b1001111;  //"1"
			4'hC: segment2=7'b1001111;  //"1"
			4'hD: segment2=7'b1001111;  //"1"
			4'hE: segment2=7'b1001111;  //"1"
			4'hF: segment2=7'b1001111;  //"1"
		endcase
	end
endmodule
